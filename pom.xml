<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fr.mazerty</groupId>
        <artifactId>core</artifactId>
        <version>1.0.1</version>
    </parent>

    <artifactId>torii</artifactId>
    <version>current</version>

    <packaging>war</packaging>

    <name>${project.groupId}:${project.artifactId}</name>
    <description>Vaadin-based suite of day-to-day applications</description>
    <url>https://github.com/mazerty/torii</url>
    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>mazerty</id>
            <name>Thomas JOUANNOT</name>
            <email>mazerty@gmail.com</email>
            <url>https://github.com/mazerty</url>
        </developer>
    </developers>
    <scm>
        <connection>scm:git:https://github.com/mazerty/torii.git</connection>
        <developerConnection>scm:git:git@github.com:mazerty/torii.git</developerConnection>
        <url>https://github.com/mazerty/torii</url>
    </scm>

    <profiles>
        <profile>
            <!-- in a development/test environment, activate this profile to interact with the test database instead of the regular one -->
            <id>database-test</id>
            <properties>
                <database.host>postgresqltest</database.host>
            </properties>
        </profile>

        <!-- these profiles are used for jooq code generation, linking a database schema with a target java package for the generated code -->
        <profile>
            <id>jooq-codegen-torii</id>
            <properties>
                <input.schema>torii</input.schema>
                <package.name>fr.mazerty.torii.dao.jooq</package.name>
            </properties>
        </profile>
    </profiles>

    <properties>
        <shika.kami.version>1.0.0</shika.kami.version>
        <shika.ishi.version>1.0.0</shika.ishi.version>
        <arquillian.version>1.0.0</arquillian.version>

        <database.host>postgresql</database.host>
        <database.url>jdbc:postgresql://${database.host}:5432/postgres</database.url>
        <database.username>postgres</database.username>

        <wildfly.hostname>wildfly</wildfly.hostname>
        <wildfly.username>admin</wildfly.username>
        <wildfly.password>admin</wildfly.password>
    </properties>

    <dependencies>
        <dependency>
            <groupId>fr.mazerty</groupId>
            <artifactId>shika-kami</artifactId>
            <version>${shika.kami.version}</version>
            <type>war</type>
        </dependency>
        <dependency>
            <groupId>fr.mazerty</groupId>
            <artifactId>shika-ishi</artifactId>
            <version>${shika.ishi.version}</version>
        </dependency>
        <dependency>
            <groupId>fr.mazerty</groupId>
            <artifactId>arquillian</artifactId>
            <version>${arquillian.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-client-compiled</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-cdi</artifactId>
        </dependency>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-themes</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>de.svenkubiak</groupId>
            <artifactId>jBCrypt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- includes vaadin's theme by way of the overlay system -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <overlays>
                        <overlay>
                            <groupId>fr.mazerty</groupId>
                            <artifactId>shika-kami</artifactId>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <configuration>
                    <hostname>${wildfly.hostname}</hostname>
                    <username>${wildfly.username}</username>
                    <password>${wildfly.password}</password>
                    <name>torii.war</name><!-- so that the deployed url ends in /torii -->
                </configuration>
            </plugin>
            <plugin>
                <!-- flyway doesn't allow to update two different databases with the same files in a single run
                     so we have to run the plugin goals twice with different profiles -->
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <configuration>
                    <driver>org.postgresql.Driver</driver>
                    <url>${database.url}</url>
                    <user>${database.username}</user>
                    <schemas>torii</schemas>
                    <locations>
                        <location>filesystem:src/main/sql</location>
                    </locations>
                </configuration>
            </plugin>
            <plugin>
                <!-- this plugin is to be called during development only
                     the generated code has to be versioned so that there's no delta between code and database
                     see the profiles for the correspondence between database schema and target java package -->
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <configuration>
                    <jdbc>
                        <driver>org.postgresql.Driver</driver>
                        <url>${database.url}</url>
                        <user>${database.username}</user>
                    </jdbc>
                    <generator>
                        <database>
                            <name>org.jooq.util.postgres.PostgresDatabase</name>
                            <includes>.*</includes>
                            <excludes>schema_version</excludes>
                            <inputSchema>${input.schema}</inputSchema>
                        </database>
                        <target>
                            <packageName>${package.name}</packageName>
                            <directory>src/main/java</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
