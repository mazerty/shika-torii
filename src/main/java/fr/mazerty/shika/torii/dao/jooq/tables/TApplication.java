/*
 * This file is generated by jOOQ.
*/
package fr.mazerty.shika.torii.dao.jooq.tables;


import fr.mazerty.shika.torii.dao.jooq.Keys;
import fr.mazerty.shika.torii.dao.jooq.Torii;
import fr.mazerty.shika.torii.dao.jooq.tables.records.TApplicationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.0"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TApplication extends TableImpl<TApplicationRecord> {

    private static final long serialVersionUID = -1708265911;

    /**
     * The reference instance of <code>torii.t_application</code>
     */
    public static final TApplication T_APPLICATION = new TApplication();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TApplicationRecord> getRecordType() {
        return TApplicationRecord.class;
    }

    /**
     * The column <code>torii.t_application.id</code>.
     */
    public final TableField<TApplicationRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>torii.t_application.name</code>.
     */
    public final TableField<TApplicationRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * Create a <code>torii.t_application</code> table reference
     */
    public TApplication() {
        this("t_application", null);
    }

    /**
     * Create an aliased <code>torii.t_application</code> table reference
     */
    public TApplication(String alias) {
        this(alias, T_APPLICATION);
    }

    private TApplication(String alias, Table<TApplicationRecord> aliased) {
        this(alias, aliased, null);
    }

    private TApplication(String alias, Table<TApplicationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Torii.TORII;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TApplicationRecord> getPrimaryKey() {
        return Keys.T_APPLICATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TApplicationRecord>> getKeys() {
        return Arrays.<UniqueKey<TApplicationRecord>>asList(Keys.T_APPLICATION_PKEY, Keys.T_APPLICATION_NAME_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TApplication as(String alias) {
        return new TApplication(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TApplication rename(String name) {
        return new TApplication(name, null);
    }
}
